{"version":3,"sources":["logo.svg","assets/images/graphic2.svg","App.js","reducer/LocalStoradge.js","Master.js","api/api.js","component/Dashboard.js","component/auth/Login.js","component/Administrator.js","component/Polyline.js","component/Gisattr.js","Route.js","serviceWorker.js","reducer/RootReducer.js","index.js"],"names":["module","exports","App","isLogin","savedDatas","JSON","parse","localStorage","getItem","console","log","accessToken","Header","Layout","Sider","Content","Menu","SubMenu","Typography","Title","Master","props","useState","collapsed","setCollapsed","useSelector","state","setDatas","dataUsers","setDataUsers","useDispatch","login","setLogin","setTahun","useEffect","a","isLoginFunc","loginDatas","year","data","logout","clear","window","location","href","style","height","trigger","collapsible","backgroundColor","boxShadow","className","fontSize","fontWeight","textAlign","akses","mode","defaultSelectedKeys","Item","key","onClick","browserHistory","push","process","DashboardTwoTone","twoToneColor","SmileTwoTone","CrownTwoTone","UserAddOutlined","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","paddingRight","float","marginRight","nama_blud","type","icon","LogoutOutlined","nama","children","endpoint","endpoint2","Date","getFullYear","createupdate","datas","URL","status","axios","post","then","res","success","getbykategori","deletepost","getall","get","url","username","password","kode","setItem","stringify","getAdmin","addAdmin","satuan","email","delAdmin","id","styled","div","p","Dashboard","counter","blud","setBlud","pagu","setPagu","realisasi","setRealisasi","dibagikan","setDibagikan","reslisasipersen","setRealisasiPersen","getData","realisasiforcount","dibagikanforcount","dashboardData","jumlahblud","total","anggaran_2020","length","total_pagu","anggaran_dibagikan","realisasianggaran","hitungpersen","x","y","parseInt","realisasipersenz","margin","minHeight","width","xs","sm","md","lg","xl","borderWidth","src","marginTop","thousandSeparator","displayType","value","Number","parseFloat","toFixed","setUsername","setPassword","dispatch","loginFunc","notification","open","message","description","CloseCircleOutlined","color","alt","require","name","onChange","e","target","placeholder","required","Input","TextArea","Administreor","modal","setModal","listAdmin","setListAdmin","setNama","setEmail","getListAdmin","showModal","admin","i","no","createAdmin","create","CheckCircleOutlined","resetForm","deleteAdmin","columns","title","dataIndex","render","text","record","onConfirm","okText","cancelText","DeleteOutlined","extra","headStyle","dataSource","visible","onOk","onCancel","Option","Select","InputBoxAbove","InputBoxCenter","Label","input","Inputx","button","Polyline","listPolyline","setListPolyline","setName","panjang","setPanjang","tipe_saluran","setTipeSaluran","konstruksi","setKonstruksi","kondisi","setKondisi","kondisi_saluran","setKondisiSaluran","file_geojson","setFileGeoJson","lebar_atas","setLebarAtas","lebar_bawah","setLebarBawah","kedalaman","setKedalaman","ext","setExt","catatan","setCatatan","isUpdate","setIsUpdate","listTipeSaluran","setListTipeSaluran","listKontruksi","setListKonstruksi","listKondisi","setListKondisi","listKondisiSaluran","setListKondisiSaluran","setListKecamatan","getPolyline","attrTipeSaluran","attrKondisiKonstruksi","attrKondisiSaluran","attrKonstruksi","attrKecamatan","kategori","attrtipesaluran","attrkondisi","attrkondisisaluran","attrkonstruksi","attrkecamatan","modelTrigger","createnew","removepolyline","polyline","data_length","marginLeft","marginBottom","centered","showSearch","optionFilterProp","map","index","nama_attr","fileReader","FileReader","readAsText","files","onload","result","InputBoxBottom","Attr","setNamaAttr","setKategori","listKecamatan","createAttr","removeattr","Routemain","history","path","component","Login","Administrator","GisAttr","Boolean","hostname","match","initialState","store","createStore","action","ReactDOM","StrictMode","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.012f6375.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/graphic2.fb4a7896.svg\";","import React, {useState} from 'react';\nimport logo from './logo.svg';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\n\nexport const isLogin = () => {\n    const savedDatas = JSON.parse(localStorage.getItem('isLogin'))\n    console.log(savedDatas)\n    if (savedDatas !== null && savedDatas.accessToken !== null) {\n       return savedDatas\n    } else {\n       return null\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Link, browserHistory, Redirect } from 'react-router';\nimport { Layout, Menu, Divider, Typography, Button } from 'antd';\nimport {\n    BuildTwoTone,\n    SnippetsTwoTone,\n    DatabaseTwoTone,\n    CrownTwoTone,\n    DashboardTwoTone,\n    LogoutOutlined,\n    UserAddOutlined,\n    DollarCircleTwoTone,\n    SmileTwoTone,\n    MenuFoldOutlined,\n    MenuUnfoldOutlined\n} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './Master.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { isLogin } from './reducer/LocalStoradge'\nimport { createBrowserHistory } from \"history\"\n\n//const history = createBrowserHistory()\n\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu\nconst { Title } = Typography;\n\nexport default function Master(props) {\n    const [collapsed, setCollapsed] = useState(false);\n    const datasFromReducer = useSelector(state => state.savedDatas)\n    const [datas, setDatas] = useState([])\n    const [dataUsers, setDataUsers] = useState([])\n    const dispatch = useDispatch();\n    const [login, setLogin] = useState(true)\n    const [tahun, setTahun] = useState('')\n\n    useEffect(async () => {\n        await isLoginFunc()\n        // if(login === false){\n        //    return  <Redirect to={'/'} />\n        // }\n    }, [])\n\n    const isLoginFunc = async () => {\n        const loginDatas = await isLogin()\n        const year = await localStorage.getItem('tahun')\n        if (loginDatas !== null) {\n            setLogin(true)\n            setDatas(loginDatas)\n            setTahun(year)\n            setDataUsers(loginDatas.data[0])\n        } else {\n            setLogin(false)\n        }\n        console.log(loginDatas)\n    }\n\n    const logout = async () => {\n        localStorage.clear()\n        setLogin(false)\n        window.location.href = '/';\n    }\n\n    const toggle = () => {\n        setCollapsed(!collapsed)\n        console.log(dataUsers)\n    }\n\n    const toLogin = () => {\n        window.location.href = '/';\n    }\n\n    if (login) {\n        return (\n\n            <Layout style={{ height: '100%' }}>\n                <Sider trigger={null} collapsible collapsed={collapsed} style={{ backgroundColor: 'white', boxShadow: 'rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px' }}>\n                    <div className=\"logo\" style={{ fontSize: 18, fontWeight: 'bold', textAlign: 'center' }}></div>\n                    {dataUsers.akses === 'admin' && (\n                        <Menu mode=\"inline\" defaultSelectedKeys={['1']}>\n                            <Menu.Item key=\"1\" onClick={() => browserHistory.push(`${process.env.PUBLIC_URL}/dashboard`)} >\n                                <DashboardTwoTone twoToneColor=\"#eb2f96\" />\n                                <span>Dashboard</span>\n                            </Menu.Item>\n                            <Menu.Item key=\"pegawai\" onClick={() => browserHistory.push(`${process.env.PUBLIC_URL}/polyline` )}>\n                                <SmileTwoTone twoToneColor=\"#10ac84\" />\n                                <span>Polyline</span>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\" onClick={() => browserHistory.push(`${process.env.PUBLIC_URL}/gisattr` )}>\n                                <CrownTwoTone twoToneColor=\"#546de5\" />\n                                <span>Data Pendukung</span>\n                            </Menu.Item>\n                            <Menu.Item key=\"8\" onClick={() => browserHistory.push(`${process.env.PUBLIC_URL}/administrator`)} >\n                                <UserAddOutlined />\n                                <span>Administrator</span>\n                            </Menu.Item>\n                        </Menu>\n                    )\n                    }\n\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n                        {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                            className: 'trigger',\n                            onClick: toggle,\n                        })}\n                        {dataUsers.akses === 'blud' &&\n                            <div style={{ paddingRight: 20, float: 'right' }}>\n                                <span style={{ fontWeight: 'bold', marginRight: 20 }}>{dataUsers.nama_blud}</span><Button type=\"danger\" onClick={logout} icon={<LogoutOutlined />}></Button>\n                            </div>\n                        }\n                        {dataUsers.akses === 'admin' &&\n                            <div style={{ paddingRight: 20, float: 'right' }}>\n                                <span style={{ fontWeight: 'bold', marginRight: 20 }}>{dataUsers.nama}</span><Button type=\"danger\" onClick={logout} icon={<LogoutOutlined />}></Button>\n                            </div>\n                        }\n\n                    </Header>\n                    {props.children}\n                </Layout>\n            </Layout>\n        )\n    } else {\n        return toLogin()\n    }\n}\n\n\n","import React from 'react'\nimport axios from 'axios'\n\nconst endpoint = 'https://api-blud.dinartech.com'\n// const endpoint = 'http://localhost:6789'\nconst endpoint2 = 'https://dinartech.com/drainase/public/api' \n\nconst year = new Date().getFullYear()\n\n\n// Reusable Function ======================================================\n\n//POST\nexport async function createupdate(datas, URL) {\n    let status = 0\n    await axios\n    .post(`${endpoint2}/${URL}`,datas)\n    .then(res => {\n        if (res.data.success === true){\n            status = 1\n        }else{\n            status = 2\n        }\n    })\n    return status;\n}\n\nexport async function getbykategori(datas, URL) {\n    let status = 0\n    await axios\n    .post(`${endpoint2}/${URL}`,datas)\n    .then(res => {\n        status = res.data.data\n        console.log(res.data.data)\n    })\n    return status;\n}\n\nexport async function deletepost(datas, URL) {\n    let status = 0\n    await axios\n    .post(`${endpoint2}/${URL}`,datas)\n    .then(res => {\n        if (res.data.success === true){\n            status = 1\n        }else{\n            status = 2\n        }\n    })\n    return status;\n}\n\n//GET\nexport async function getbyid(id, URL){\n    let datas = []\n    console.log(id)\n    await axios\n    .get(`${endpoint}/${URL}/${id}`)\n    .then(res => {\n        datas = res.data.datas\n    })\n    console.log(datas)\n    return datas\n}\n\nexport async function getall(URL){\n    let datas = []\n    await axios\n    .get(`${endpoint2}/${URL}`)\n    .then(res => {\n        datas = res.data\n    })\n    console.log(datas)\n    return datas\n}\n\nexport async function getallpost(datas, URL){\n    let datasretrurn = []\n    await axios\n    .post(`${endpoint}/${URL}`,{\n        datas\n    })\n    .then(res => {\n        datasretrurn = res.data.datas\n    })\n    console.log(datas)\n    return datasretrurn\n}\n\n\n//DELETE\nexport async function remove(id, URL){\n    let status = 0;\n\n    await axios\n    .get(`${endpoint}/${URL}/${id}`)\n    .then(res => {\n        if (res.data.kode === 1){\n            status = 1\n        }else{\n            status = 2\n        }\n    })\n    return status;\n}\n\n// ==========================================================================\n\n//Authentication =============================================================\n\nexport async function login(datas, url) {\n    let status = 1\n    await axios\n    .post(`${endpoint}/${url}`,{\n        username : datas.username,\n        password : datas.password\n    })\n    .then(res => {\n        if (res.data.kode === 1){\n            localStorage.setItem('isLogin', JSON.stringify(res.data))\n            localStorage.setItem('tahun', year)\n            status = 1\n        }else{\n            status = 2\n        }\n    })\n    return status;\n}\n\n// administrators =================================================================\n\nexport async function getAdmin(){\n    let datas = []\n    await axios\n    .get(`${endpoint}/getadmin`)\n    .then(res => {\n        datas = res.data.datas\n    })\n    return datas\n}\n\nexport async function addAdmin(datas){\n    let status = 0;\n    console.log(datas.satuan)\n    await axios\n    .post(`${endpoint}/createadmin`,{\n        nama: datas.nama,\n        username : datas.username,\n        email: datas.email,\n        password: datas.password\n    })\n    .then(res => {\n        if (res.data.status === 1){\n            status = 1\n        }else{\n            status = 2\n        }\n    })\n    return status;\n}\n\nexport async function delAdmin(id){\n    let status = 0;\n\n    await axios\n    .get(`${endpoint}/deleteadmin/${id}`)\n    .then(res => {\n        if (res.data.status === 1){\n            status = 1\n        }else{\n            status = 2\n        }\n    })\n    return status;\n}\n\n//=================================================================================\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Layout, PageHeader, Row, Col, Card, Typography } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    HomeOutlined,\n    SkinOutlined,\n    ShoppingCartOutlined,\n    CarOutlined,\n    UsergroupAddOutlined,\n    CodeSandboxOutlined,\n    TransactionOutlined\n} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { createupdate, getall, remove, getbyid, getallpost } from '../api/api';\nimport { Link, browserHistory } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport NumberFormat from 'react-number-format'\n\nconst { Title } = Typography;\n\nconst CardBox = styled.div`\n    border: 1px solid #a5b1c2;\n    margin-top: 20px;\n    padding: 10px;\n    border : 5px;\n`;\nconst Label = styled.p`\n    margin-bottom: 2px;\n    font-weight: bold;\n    font-size: 14px;\n    font-family: 'Montserrat', sans-serif;\n`;\nconst { Header, Sider, Content } = Layout;\n\nfunction Dashboard() {\n    const counter = useSelector(state => state.counter)\n    const dispatch = useDispatch();\n    const [dashboard, setDashboard] = useState([])\n    const [blud, setBlud] = useState('')\n    const [pagu, setPagu] = useState('')\n    const [realisasi, setRealisasi] = useState('')\n    const [dibagikan, setDibagikan] = useState('')\n    const [reslisasipersen, setRealisasiPersen] = useState('')\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    const getData = async () => {\n        const data = []\n        const url = 'dashboard'\n        let realisasiforcount= 0 ;\n        let dibagikanforcount= 0\n        let dashboardData = await getall(url)\n        setBlud(dashboardData.jumlahblud[0].total)\n        console.log(dashboardData.anggaran_2020.length)\n        if (dashboardData.anggaran_2020.length === 0) {\n            setPagu(0)\n        } else {\n            setPagu(dashboardData.anggaran_2020[0].total_pagu)\n        }\n        if (dashboardData.anggaran_dibagikan[0].total === null) {\n            setDibagikan(0)\n        } else {\n            dibagikanforcount = dashboardData.anggaran_dibagikan[0].total\n            setDibagikan(dashboardData.anggaran_dibagikan[0].total)\n        }\n        if (dashboardData.realisasianggaran[0].total === null) {\n            setRealisasi(0)\n        } else {\n            realisasiforcount = dashboardData.realisasianggaran[0].total\n            setRealisasi(dashboardData.realisasianggaran[0].total)\n        }\n\n        await hitungpersen(realisasiforcount, dibagikanforcount)\n    }\n\n    const hitungpersen = async(x, y) => {\n        console.log(x)\n        console.log(y)\n        const realisasipersenz = await parseInt(x) / parseInt(y) * 100\n        setRealisasiPersen(realisasipersenz)\n    }\n\n    const logout = async () => {\n        await localStorage.clear()\n        browserHistory.push('/')\n    }\n\n    return (\n        <Content\n            //className=\"site-layout-background\"\n            style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 280,\n            }}\n        >\n\n            <Row style={{ width: \"100%\" }}>\n                <Col xs={12} sm={12} md={5} lg={5} xl={5} style={{ padding: 10 }}>\n                    <Card\n                        style={{ width: '100%', borderWidth: 1 }}\n                    >\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <img src=\"https://www.flaticon.com/svg/static/icons/svg/3616/3616975.svg\" style={{ width: 80 }} />\n                            </Col>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <p style={{ fontSize: 16, fontWeight: 'bold' }}>{blud}</p>\n                                <Title style={{ fontSize: 14, marginTop: -10 }}>Badan Layanan Umum Daerah (BLUD)</Title>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n                <Col xs={12} sm={12} md={5} lg={5} xl={5} style={{ padding: 10 }}>\n                    <Card\n                        style={{ width: '100%', borderWidth: 1 }}\n                    >\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <img src=\"https://www.flaticon.com/svg/static/icons/svg/3617/3617143.svg\" style={{ width: 80 }} />\n                            </Col>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <p style={{ fontSize: 16, fontWeight: 'bold' }}>Rp <NumberFormat thousandSeparator={true} displayType={'text'} value={pagu} /></p>\n                                <Title style={{ fontSize: 14, marginTop: -10 }}>Total Pagu Anggaran {localStorage.getItem('tahun')} </Title>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n                <Col xs={12} sm={12} md={5} lg={5} xl={5} style={{ padding: 10 }}>\n                    <Card\n                        style={{ width: '100%', borderWidth: 1 }}\n                    >\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <img src=\"https://www.flaticon.com/svg/static/icons/svg/3617/3617174.svg\" style={{ width: 80 }} />\n                            </Col>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <p style={{ fontSize: 16, fontWeight: 'bold' }}>Rp <NumberFormat thousandSeparator={true} displayType={'text'} value={dibagikan} /></p>\n                                <Title style={{ fontSize: 14, marginTop: -10 }}>Total Pagu Anggaran BLUD {localStorage.getItem('tahun')}</Title>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n                <Col xs={12} sm={12} md={5} lg={5} xl={5} style={{ padding: 10 }}>\n                    <Card\n                        style={{ width: '100%', borderWidth: 1 }}\n                    >\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <img src=\"https://www.flaticon.com/svg/static/icons/svg/3616/3616866.svg\" style={{ width: 80 }} />\n                            </Col>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <p style={{ fontSize: 16, fontWeight: 'bold' }}>Rp <NumberFormat thousandSeparator={true} displayType={'text'} value={realisasi} /></p>\n                                <Title style={{ fontSize: 14, marginTop: -10 }}>Pagu Anggaran Terealisasi </Title>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n                <Col xs={12} sm={12} md={4} lg={4} xl={4} style={{ padding: 10 }}>\n                    <Card\n                        style={{ width: '100%', borderWidth: 1 }}\n                    >\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <img src=\"https://www.flaticon.com/svg/static/icons/svg/3616/3616866.svg\" style={{ width: 80 }} />\n                            </Col>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                <p style={{ fontSize: 16, fontWeight: 'bold' }}>{Number.parseFloat(reslisasipersen).toFixed(2)} %</p>\n                                <Title style={{ fontSize: 14, marginTop: -10 }}>Pagu Anggaran Terealisasi (%)</Title>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </Content>\n    )\n}\n\nexport default Dashboard;","import React, { useEffect, useState } from 'react'\nimport { Layout, Modal, Row, Col, notification } from 'antd'\nimport styled from 'styled-components'\nimport 'antd/dist/antd.css';\nimport { Link, browserHistory } from 'react-router';\nimport {\n    login,\n} from './../../api/api';\nimport {\n    CloseCircleOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\n\n//const endpoint = process.env.REACT_APP_ENDPOINT_URL\n\n\nconst App = () => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [signup, setSignUp] = useState(false);\n    const [namainstansi, setNamaInstansi] = useState('');\n    const [email, setEmail] = useState('');\n    const [messagebox, setMmessageBox] = useState(false)\n    const [message, setMessage] = useState('')\n    const counter = useSelector(state => state.counter);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        //localStorage.clear();\n        const savedDatas = localStorage.getItem('isLogin')\n        console.log(`save data ${savedDatas}`)\n        if (savedDatas !== null && savedDatas.accessToken !== null) {\n            dispatch({ type: \"SAVEDATAS\" })\n            browserHistory.push(`${process.env.PUBLIC_URL}/dashboard`)\n        } else {\n            console.log('null')\n        }\n    }, [])\n\n    const loginFunc = async () => {\n        if (username === '' || password === '') {\n            notification.open({\n                message: 'Gagal Login',\n                description:\n                    'Form username atau password tidak boleh kosong',\n                icon: <CloseCircleOutlined style={{ color: '#e84118' }} />,\n            });\n        } else {\n            let datas = {\n                username,\n                password\n            }\n            const url = \"loginadmin\"\n            const cek = await login(datas, url)\n            if (cek === 1) {\n                browserHistory.push(`${process.env.PUBLIC_URL}/dashboard`)\n                const savedDatas = JSON.parse(localStorage.getItem('isLogin'))\n                console.log(savedDatas)\n            } else {\n                notification.open({\n                    message: 'username atau password tidak sesuai',\n                    description:\n                        '',\n                    icon: <CloseCircleOutlined style={{ color: '#e84118' }} />,\n                });\n            }\n        }\n    }\n\n    const toggleSignUp = async () => {\n        setSignUp(!signup)\n    }\n\n    const togglemessagebox = async () => {\n        setMmessageBox(!messagebox)\n    }\n\n    return (\n        <div className=\"form-body without-side\">\n        <div className=\"website-logo\">\n            <a href=\"index.html\">\n                <div className=\"logo\">\n                    <img className=\"logo-size\" src=\"images/logo-light.svg\" alt=\"\" />\n                </div>\n            </a>\n        </div>\n        <div className=\"row\">\n            <div className=\"img-holder\">\n                <div className=\"bg\"></div>\n                <div className=\"info-holder\">\n                    <img src={require('./../../assets/images/graphic2.svg')} alt=\"\" />\n                </div>\n            </div>\n            <div className=\"form-holder\">\n                <div className=\"form-content\">\n                    <div className=\"form-items\">\n                        <h3>Login Administrator</h3>\n                        <p>Sistem Informasi Geografis Drainase dan Sungai</p>\n                        <form>\n                            <input className=\"form-control\" type=\"text\" name=\"username\"  onChange={e => setUsername(e.target.value)}  placeholder=\"Username\" required />\n                            <input className=\"form-control\" type=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} placeholder=\"Password\" required />\n                        </form>\n                        <div className=\"form-button\">\n                                <button  onClick={loginFunc} className=\"ibtn\" style={{ backgroundColor: '#00a8ff', color:' white' }}>Login</button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n\n}\n\nexport default App","import React, { useEffect, useState } from 'react';\nimport { Layout, PageHeader, Row, Col, Card, Modal, Button, Popconfirm, Table, Input, notification } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    HomeOutlined,\n    SkinOutlined,\n    ShoppingCartOutlined,\n    CarOutlined,\n    UsergroupAddOutlined,\n    CodeSandboxOutlined,\n    TransactionOutlined,\n    DeleteOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { getAdmin, addAdmin, delAdmin } from './../api/api';\nimport { Typography } from 'antd';\n\n\nconst { Header, Sider, Content } = Layout;\nconst { Title } = Typography;\nconst { TextArea } = Input;\n\nfunction Administreor() {\n\n    const [modal, setModal] = useState(false)\n    const [listAdmin, setListAdmin] = useState([])\n    const [nama, setNama] = useState('')\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    useEffect(() => {\n        getListAdmin()\n    }, [])\n\n    const showModal = () => {\n        setModal(!modal)\n    }\n\n    const getListAdmin = async () => {\n        const data = []\n        let data_length = (await getAdmin()).length\n        let admin = await getAdmin()\n        console.log(admin)\n        for (let i = 0; i < admin.length; i++) {\n            data.push({\n                id:  admin[i].id,\n                no: i + 1,\n                nama: admin[i].nama,\n                username: admin[i].username,\n                email: admin[i].email,\n            })\n        }\n        setListAdmin(data)\n    }\n\n    const createAdmin = async () => {\n        const datas ={\n            nama,\n            username,\n            email,\n            password\n        }\n\n        console.log(datas)\n\n        const create = await addAdmin(datas)\n        console.log(create)\n        if(create === 1){\n            notification.open({\n                message: 'Administrator berhasil ditambah',\n                description:\n                    '',\n                icon: <CheckCircleOutlined style={{ color: '#108ee9' }} />,\n            });\n            resetForm()\n            getListAdmin()\n            showModal()\n        }else{\n            notification.open({\n                message: 'Administrator gagal ditambahkan',\n                description:\n                    '',\n                icon: <CheckCircleOutlined style={{ color: '#108ee9' }} />,\n            });\n        }\n    }\n\n    const deleteAdmin = async (id) => {\n        const deleteid = await delAdmin(id)\n        if(deleteid === 1){\n            notification.open({\n                message: 'Administrator berhasil dihapus',\n                description:\n                    '',\n                icon: <CheckCircleOutlined style={{ color: '#108ee9' }} />,\n            });\n            getListAdmin()\n        }else{\n            notification.open({\n                message: 'Administrator gagal dihapus',\n                description:\n                    '',\n                icon: <CheckCircleOutlined style={{ color: '#108ee9' }} />,\n            });\n        }\n     }\n\n    const resetForm = () => {\n        setNama('')\n        setUsername('')\n        setEmail('')\n        setPassword('')\n    }\n    const columns = [\n        {\n            title: 'Nomor',\n            key: 'no',\n            dataIndex: 'no',\n        },\n        {\n            title: 'Nama',\n            key: 'nama',\n            dataIndex: 'nama'\n        },\n        {\n            title: 'Username',\n            key: 'username',\n            dataIndex: 'username'\n        },\n        {\n            title: 'Email',\n            key: 'email',\n            dataIndex: 'email'\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                    <Popconfirm\n                        title=\"Anda yakin menghapus Data ini?\"\n                        onConfirm={() => deleteAdmin(record.id)}\n                        // onCancel={cancel}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button key=\"hapus_kategori\" type=\"danger\" icon={<DeleteOutlined />} >Hapus</Button>\n                    </Popconfirm>\n                </span>\n            ),\n        },\n    ];\n\n    return (\n        <Content\n            className=\"site-layout-background\"\n            style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 280,\n            }}\n        >\n\n            <Card\n                title=\"Administrator\"\n                extra={<Button type=\"dashed\" onClick={showModal}>Tambah Administrator</Button>}\n                style={{ width: '100%', borderWidth: 0 }}\n                headStyle={{ color: 'white', backgroundColor: '#0984e3', fontWeight: 'bold', fontSize: 20 }}\n            />\n\n            <Table columns={columns} dataSource={listAdmin} />\n\n            <Modal\n                title=\"Tambah Administrator\"\n                visible={modal}\n                onOk={createAdmin}\n                onCancel={showModal}\n                width={800}\n            >\n                <Title style={{ fontSize:14,  }}>Nama</Title>\n                <Input placeholder=\"Nama\" value={nama} onChange={e => setNama(e.target.value)} />\n                <Title style={{ fontSize:14, marginTop:20 }}>Username</Title>\n                <Input placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n                <Title style={{ fontSize:14, marginTop:20 }}>Email</Title>\n                <Input placeholder=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n                <Title style={{ fontSize:14, marginTop:20 }}>Password</Title>\n                <Input placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n            </Modal>\n        </Content>\n    )\n}\n\nexport default Administreor;","import React, { useEffect, useState } from 'react';\nimport { Layout, Select, Row, Col, Card, Modal, Button, Popconfirm, Table, Input, notification, Form, Radio } from 'antd';\nimport {\n    DeleteOutlined,\n    CheckCircleOutlined,\n    InfoCircleOutlined,\n    CloseCircleOutlined\n} from '@ant-design/icons';\nimport { createupdate, getall, remove, getbyid, getbykategori, deletepost } from '../api/api';\nimport { Typography } from 'antd';\nimport { Link, browserHistory } from 'react-router';\nimport { isLogin } from '../reducer/LocalStoradge'\nimport styled from 'styled-components';\n\nconst { Header, Sider, Content } = Layout;\nconst { Title } = Typography;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst InputBoxAbove = styled.div`\n    border: 1px solid #a5b1c2;\n    margin-top: 20px;\n    padding: 10px;\n    border-radius: 5px 5px 0px 0px ;\n`;\nconst InputBoxCenter = styled.div`\n    border-left: 1px solid #a5b1c2;\n    border-right: 1px solid #a5b1c2;\n    border-bottom: 1px solid #a5b1c2;\n    padding: 10px;\n`;\n\nconst InputBoxBottom = styled.div`\n    border-bottom: 1px solid #a5b1c2;\n    border-left: 1px solid #a5b1c2;\n    border-right: 1px solid #a5b1c2;\n    padding: 10px;\n    border-radius: 0px 0px 5px 5px;\n`;\n\nconst Judul = styled.input`\n    width: 100%;\n    border: 0px;\n    font-family: 'Montserrat', sans-serif;\n    margin-top: 20px;\n    &:focus{\n        outline: none;\n    }\n`;\n\nconst Label = styled.p`\n    margin-bottom: 2px;\n    font-weight: bold;\n    font-size: 14px;\n    font-family: 'Montserrat', sans-serif;\n`;\n\nconst Buttonx = styled.button`\n    margin-top: 20px;\n    background-color:#4b7bec;\n    border: 1px solid #4b7bec;\n    border-radius: 5px;\n    color: white;\n    padding: 7px;\n    float: right;\n    cursor: pointer;\n    font-weight: bold;\n    width: 100%;\n    &:hover{\n        color: #3498db;\n        border: 1px solid #3498db;\n        font-weight: bold;\n    }\n`;\n\nconst Inputx = styled.input`\n    width: 100%;\n    border: 0px;\n    font-family: 'Montserrat', sans-serif;\n    &:focus{\n        outline: none;\n    }\n`;\n\n\nexport default function Polyline() {\n\n    const [modal, setModal] = useState(false)\n    const [listPolyline, setListPolyline] = useState([])\n    const [name, setName] = useState('')\n    const [panjang, setPanjang] = useState('')\n    const [tipe_saluran, setTipeSaluran] = useState('')\n    const [konstruksi, setKonstruksi] = useState('')\n    const [kondisi, setKondisi] = useState('')\n    const [kondisi_saluran, setKondisiSaluran] = useState('')\n    const [file_geojson, setFileGeoJson] = useState('')\n    const [lebar_atas, setLebarAtas] = useState('')\n    const [lebar_bawah, setLebarBawah] = useState('')\n    const [kedalaman, setKedalaman] = useState('')\n    const [ext, setExt] = useState('')\n    const [catatan, setCatatan] = useState('')\n    const [isUpdate, setIsUpdate] = useState('')\n\n    const [listTipeSaluran, setListTipeSaluran] = useState([])\n    const [listKontruksi, setListKonstruksi] = useState([])\n    const [listKondisi, setListKondisi] = useState([])\n    const [listKondisiSaluran, setListKondisiSaluran] = useState([])\n    const [listKecamatan, setListKecamatan] = useState([])\n\n    useEffect(() => {\n        getPolyline()\n        attrTipeSaluran()\n        attrKondisiKonstruksi()\n        attrKondisiSaluran()\n        attrKonstruksi()\n        attrKecamatan()\n    }, [])\n\n    const attrTipeSaluran = async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Tipe Saluran'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrtipesaluran = await getbykategori(datas, url)\n        setListTipeSaluran(attrtipesaluran)\n    }\n\n    const attrKondisiKonstruksi = async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Kondisi'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkondisi = await getbykategori(datas, url)\n       \n        setListKondisi(attrkondisi)\n    }\n\n    const attrKondisiSaluran= async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Kondisi Saluran'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkondisisaluran = await getbykategori(datas, url)\n      \n        setListKondisiSaluran(attrkondisisaluran)\n    }\n\n    const attrKonstruksi= async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Konstruksi'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkonstruksi = await getbykategori(datas, url)\n        \n        setListKonstruksi(attrkonstruksi)\n    }\n\n    const attrKecamatan= async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Kecamatan'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkecamatan = await getbykategori(datas, url)\n       \n        setListKecamatan(attrkecamatan)\n    }\n\n\n    const modelTrigger = () => {\n        setModal(!modal)\n    }\n\n    const createorupdate = () => {\n        // isUpdate ? update() : create()\n        create()\n    }\n\n    const createnew = async () => {\n        modelTrigger()\n        setIsUpdate(false)\n        // resetForm()\n    }\n\n    const create = async () => {\n        if (name === '') {\n            notification.open({\n                message: 'Gagal Menyimnpan',\n                description:\n                    'Form tidak boleh kosong',\n                icon: <CloseCircleOutlined style={{ color: '#e84118' }} />,\n            });\n        } else {\n            let datas = {\n                name,\n                panjang,\n                tipe_saluran,\n                konstruksi,\n                kondisi,\n                kondisi_saluran,\n                file_geojson,\n                lebar_atas,\n                lebar_bawah,\n                kedalaman,\n                ext,\n                catatan,\n            }\n            console.log(isUpdate)\n            const apiurl = 'createpolyline';\n            console.log(apiurl)\n            let createpegawai = await createupdate(datas, apiurl)\n            if (createpegawai === 1) {\n                notification.open({\n                    message: 'Data Berhasil disimpan',\n                    description:\n                        '',\n                    icon: <CheckCircleOutlined style={{ color: '#00b894' }} />,\n                });\n                getPolyline()\n                modelTrigger()\n                resetForm()\n            } else {\n                notification.open({\n                    message: 'Gagal Menyimpan Data',\n                    description:\n                        '',\n                    icon: <CloseCircleOutlined style={{ color: '#e84118' }} />,\n                });\n            }\n        }\n    }\n\n    const removepolyline = async(id) => {\n        console.log(id)\n        const datas = {\n            id\n        }\n        const apiurl = 'deletepolyline';\n        let deletee = await deletepost(datas, apiurl) \n        if(deletee === 1){\n            notification.open({\n                message: 'Data Berhasil dihapus',\n                description:\n                    '',\n                icon: <CheckCircleOutlined style={{ color: '#00b894' }} />,\n            });\n            getPolyline()\n        }else{\n            notification.open({\n                message: 'Gagal Menghapus Data',\n                description:\n                    '',\n                icon: <CloseCircleOutlined style={{ color: '#e84118' }} />,\n            });\n        }\n\n    }\n\n    const resetForm = () => {\n       setName('')\n       setPanjang('')\n       setTipeSaluran('')\n       setKonstruksi('')\n       setKondisi('')\n       setKondisiSaluran('')\n       setLebarAtas('')\n       setLebarBawah('')\n       setKedalaman('')\n       setExt('')\n       setCatatan('')\n    }\n\n    const getPolyline = async () => {\n        const data = []\n        const url = 'getpolyline'\n        let polyline = await getall(url)\n\n        let data_length = polyline.length\n\n        for (let i = 0; i < data_length; i++) {\n            data.push({\n                no: i + 1,\n                id: polyline[i].id,\n                name: polyline[i].name,\n                panjang: polyline[i].panjang,\n                tipe_saluran: polyline[i].tipe_saluran,\n            })\n        }\n        setListPolyline(data)\n    }\n\n    const handleChange = e => {\n        const fileReader = new FileReader();\n        fileReader.readAsText(e.target.files[0], \"UTF-8\");\n        fileReader.onload = e => {\n          console.log(\"e.target.result\", e.target.result);\n          setFileGeoJson(e.target.result);\n        };\n      };\n\n    const columns = [\n        {\n            title: 'Nomor',\n            key: 'no',\n            dataIndex: 'no',\n        },\n        {\n            title: 'Nama',\n            key: 'name',\n            dataIndex: 'name'\n        },\n        {\n            title: 'Panjang',\n            key: 'panjang',\n            dataIndex: 'panjang'\n        },\n        {\n            title: 'Tipe Saluran',\n            key: 'tipe_saluran',\n            dataIndex: 'tipe_saluran'\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                    {/* <Button key=\"edit\" onClick={() => getPegawaiById(record.id)} style={{ marginLeft: 10 }} type=\"primary\" icon={<InfoCircleOutlined />} >Edit</Button> */}\n                    <Popconfirm\n                        title=\"Anda yakin menghapus Data ini?\"\n                        onConfirm={() => removepolyline(record.id)}\n                        // onCancel={cancel}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button key=\"hapus\" style={{ marginLeft: 10 }} type=\"danger\" icon={<DeleteOutlined />} >Hapus</Button>\n                    </Popconfirm>\n                </span>\n            ),\n        },\n    ];\n\n    const onChangeKonstruksi = value => {\n        setKonstruksi(value)\n    }\n\n    const onChangeKondisi = value => {\n        setKondisi(value)\n    }\n\n    const onChangeTipeSaluran = value => {\n        setTipeSaluran(value)\n    }\n\n    const onChangeKondisiSaluran = value => {\n        setKondisiSaluran(value)\n    }\n\n    return (\n        <Content\n            className=\"site-layout-background\"\n            style={{\n                margin: '24px 16px',\n                padding: 24,\n            }}\n        >\n\n            <Card\n                title=\"Polyline\"\n                //extra={<Button type=\"dashed\" onClick={() => browserHistory.push('/addpegawai')}>Tambah Pegawai </Button>}\n                extra={<Button type=\"dashed\" onClick={createnew}>Tambah Data Polyline </Button>}\n                style={{ width: '100%', borderWidth: 0, marginBottom: 20 }}\n                headStyle={{ color: 'white', backgroundColor: '#0984e3', fontWeight: 'bold', fontSize: 20, }}\n            />\n\n            <Table columns={columns} dataSource={listPolyline} />\n\n            <Modal\n                title=\"Tambah Polyline\"\n                centered\n                visible={modal}\n                onOk={createorupdate}\n                onCancel={modelTrigger}\n                width={1000}\n            >\n                <InputBoxAbove style={{ backgroundColor: '#0984e3', color:'white' }}>\n                    <Label>Data Primer</Label>\n                </InputBoxAbove>\n                <InputBoxCenter>\n                    <Label>Nama Jaringan</Label>\n                    <Inputx placeholder=\"Nama Jaringan\" value={name} onChange={e => setName(e.target.value)} />\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Panjang</Label>\n                    <Inputx placeholder=\"Panjang\" value={panjang} onChange={e => setPanjang(e.target.value)} />\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Tipe Saluran</Label>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Pilih Tipe Saluran\"\n                        optionFilterProp=\"children\"\n                        style={{ width: '100%', borderWidth: 0 }}\n                        onChange={onChangeTipeSaluran}\n                        value={tipe_saluran}\n                    >\n                        {listTipeSaluran.map((data, index) =>\n                            <Option value={data.nama_attr}>{data.nama_attr}</Option>\n                        )}\n                    </Select>\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Konstruksi</Label>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Pilih Konstruksi\"\n                        optionFilterProp=\"children\"\n                        style={{ width: '100%', borderWidth: 0 }}\n                        onChange={onChangeKonstruksi}\n                        value={konstruksi}\n                    >\n                        {listKontruksi.map((data, index) =>\n                            <Option value={data.nama_attr}>{data.nama_attr}</Option>\n                        )}\n                    </Select>\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Kondisi Konstruksi</Label>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Pilih Kondisi Konstruksi\"\n                        optionFilterProp=\"children\"\n                        style={{ width: '100%', borderWidth: 0 }}\n                        onChange={onChangeKondisi}\n                        value={kondisi}\n                    >\n                        {listKondisi.map((data, index) =>\n                            <Option value={data.nama_attr}>{data.nama_attr}</Option>\n                        )}\n                    </Select>\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Kondisi Saluran</Label>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Pilih Kondisi Saluran\"\n                        optionFilterProp=\"children\"\n                        style={{ width: '100%', borderWidth: 0 }}\n                        onChange={onChangeKondisiSaluran}\n                        value={kondisi_saluran}\n                    >\n                        {listKondisiSaluran.map((data, index) =>\n                            <Option value={data.nama_attr}>{data.nama_attr}</Option>\n                        )}\n                    </Select>\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>File GeoJson</Label>\n                    <input type=\"file\" onChange={handleChange} />\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Lebar Atas</Label>\n                    <Inputx placeholder=\"Lebar Atas\" value={lebar_atas} onChange={e => setLebarAtas(e.target.value)} />\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Lebar Bawah</Label>\n                    <Inputx placeholder=\"Lebar Bawah\" value={lebar_bawah} onChange={e => setLebarBawah(e.target.value)} />\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Kedalaman</Label>\n                    <Inputx placeholder=\"Kedalaman\" value={kedalaman} onChange={e => setKedalaman(e.target.value)} />\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Kecamatan</Label>\n                    <Inputx placeholder=\"Kecamatan\" value={ext} onChange={e => setExt(e.target.value)} />\n                </InputBoxCenter>\n                <InputBoxCenter>\n                    <Label>Catatan</Label>\n                    <Inputx placeholder=\"Catatan\" value={catatan} onChange={e => setCatatan(e.target.value)} />\n                </InputBoxCenter>\n            </Modal>\n\n        </Content>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Layout, PageHeader, Row, Col, Card, Modal, Button, Select, notification, Table, Popconfirm } from 'antd';\nimport {\n   CheckCircleOutlined,\n   CloseCircleOutlined,\n   DeleteOutlined\n} from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { createupdate, getall, remove, getbyid, getbykategori, deletepost } from '../api/api';\nimport styled from 'styled-components';\n\n\nconst { Header, Sider, Content } = Layout;\nconst { Option } = Select;\n\nconst InputBoxAbove = styled.div`\n    border: 1px solid #a5b1c2;\n    margin-top: 20px;\n    padding: 10px;\n    border-radius: 5px 5px 0px 0px ;\n`;\nconst InputBoxCenter = styled.div`\n    border-left: 1px solid #a5b1c2;\n    border-right: 1px solid #a5b1c2;\n    border-bottom: 1px solid #a5b1c2;\n    padding: 10px;\n`;\n\nconst InputBoxBottom = styled.div`\n    border-bottom: 1px solid #a5b1c2;\n    border-left: 1px solid #a5b1c2;\n    border-right: 1px solid #a5b1c2;\n    padding: 10px;\n    border-radius: 0px 0px 5px 5px;\n`;\n\nconst Judul = styled.input`\n    width: 100%;\n    border: 0px;\n    font-family: 'Montserrat', sans-serif;\n    margin-top: 20px;\n    &:focus{\n        outline: none;\n    }\n`;\n\nconst Label = styled.p`\n    margin-bottom: 2px;\n    font-weight: bold;\n    font-size: 14px;\n    font-family: 'Montserrat', sans-serif;\n`;\n\nconst Buttonx = styled.button`\n    margin-top: 20px;\n    background-color:#4b7bec;\n    border: 1px solid #4b7bec;\n    border-radius: 5px;\n    color: white;\n    padding: 7px;\n    float: right;\n    cursor: pointer;\n    font-weight: bold;\n    width: 100%;\n    &:hover{\n        color: #3498db;\n        border: 1px solid #3498db;\n        font-weight: bold;\n    }\n`;\n\nconst Inputx = styled.input`\n    width: 100%;\n    border: 0px;\n    font-family: 'Montserrat', sans-serif;\n    &:focus{\n        outline: none;\n    }\n`;\n\nfunction Attr() {\n\n    const [modal, setModal] = useState(false)\n    const [nama_attr, setNamaAttr] = useState('')\n    const [kategori, setKategori] = useState('')\n    const [listTipeSaluran, setListTipeSaluran] = useState([])\n    const [listKontruksi, setListKonstruksi] = useState([])\n    const [listKondisi, setListKondisi] = useState([])\n    const [listKondisiSaluran, setListKondisiSaluran] = useState([])\n    const [listKecamatan, setListKecamatan] = useState([])\n   \n\n    useEffect(() => {\n        attrTipeSaluran()\n        attrKondisiKonstruksi()\n        attrKondisiSaluran()\n        attrKonstruksi()\n        attrKecamatan()\n    }, [])\n\n    const modelTrigger = () => {\n        setModal(!modal)\n    }\n\n    const attrTipeSaluran = async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Tipe Saluran'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrtipesaluran = await getbykategori(datas, url)\n        let data_length = attrtipesaluran.length\n\n        for (let i = 0; i < data_length; i++) {\n            data.push({\n                no: i + 1,\n                id: attrtipesaluran[i].id,\n                nama: attrtipesaluran[i].nama_attr,\n            })\n        }\n        setListTipeSaluran(data)\n    }\n\n    const attrKondisiKonstruksi = async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Kondisi'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkondisi = await getbykategori(datas, url)\n        let data_length = attrkondisi.length\n\n        for (let i = 0; i < data_length; i++) {\n            data.push({\n                no: i + 1,\n                id: attrkondisi[i].id,\n                nama: attrkondisi[i].nama_attr,\n            })\n        }\n        setListKondisi(data)\n    }\n\n    const attrKondisiSaluran= async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Kondisi Saluran'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkondisisaluran = await getbykategori(datas, url)\n        let data_length = attrkondisisaluran.length\n\n        for (let i = 0; i < data_length; i++) {\n            data.push({\n                no: i + 1,\n                id: attrkondisisaluran[i].id,\n                nama: attrkondisisaluran[i].nama_attr,\n            })\n        }\n        setListKondisiSaluran(data)\n    }\n\n    const attrKonstruksi= async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Konstruksi'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkonstruksi = await getbykategori(datas, url)\n        let data_length = attrkonstruksi.length\n\n        for (let i = 0; i < data_length; i++) {\n            data.push({\n                no: i + 1,\n                id: attrkonstruksi[i].id,\n                nama: attrkonstruksi[i].nama_attr,\n            })\n        }\n        setListKonstruksi(data)\n    }\n\n    const attrKecamatan= async () => {\n        const url = 'getbykategori'\n        const kategoris = 'Kecamatan'\n        let datas = {\n            kategori : kategoris\n        }\n        const data = []\n        let attrkecamatan = await getbykategori(datas, url)\n        let data_length = attrkecamatan.length\n\n        for (let i = 0; i < data_length; i++) {\n            data.push({\n                no: i + 1,\n                id: attrkecamatan[i].id,\n                nama: attrkecamatan[i].nama_attr,\n            })\n        }\n        setListKecamatan(data)\n    }\n\n    const onChangeKategori = value => {\n        setKategori(value)\n        console.log(value)\n    }\n\n    const createAttr = async() => {\n        let datas = {\n           nama_attr,\n           kategori\n        }\n        let apiUrl = 'createattr'\n        const createattr = await createupdate(datas, apiUrl)\n        if (createattr === 1) {\n            notification.open({\n                message: 'Data Berhasil disimpan',\n                description:\n                    '',\n                icon: <CheckCircleOutlined style={{ color: '#00b894' }} />,\n            });\n            attrTipeSaluran()\n            attrKondisiKonstruksi()\n            attrKondisiSaluran()\n            attrKonstruksi()\n            attrKecamatan()\n        } else {\n            notification.open({\n                message: 'Gagal Menyimpan Data',\n                description:\n                    '',\n                icon: <CloseCircleOutlined style={{ color: '#e84118' }} />,\n            });\n        }\n    }\n\n    const removeattr = async(id) => {\n        console.log(id)\n        const datas = {\n            id\n        }\n        const apiurl = 'deleteattr';\n        let deletee = await deletepost(datas, apiurl) \n        if(deletee === 1){\n            notification.open({\n                message: 'Data Berhasil dihapus',\n                description:\n                    '',\n                icon: <CheckCircleOutlined style={{ color: '#00b894' }} />,\n            });\n            attrTipeSaluran()\n            attrKondisiKonstruksi()\n            attrKondisiSaluran()\n            attrKonstruksi()\n            attrKecamatan()\n        }else{\n            notification.open({\n                message: 'Gagal Menghapus Data',\n                description:\n                    '',\n                icon: <CloseCircleOutlined style={{ color: '#e84118' }} />,\n            });\n        }\n\n    }\n\n\n    const columns = [\n        {\n            title: 'No',\n            key: 'no',\n            dataIndex: 'no',\n        },\n        {\n            title: 'Nama Atribut',\n            key: 'nama',\n            dataIndex: 'nama'\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                    <Popconfirm\n                        title=\"Anda yakin menghapus Data ini?\"\n                        onConfirm={() => removeattr(record.id)}\n                        // onCancel={cancel}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button key=\"hapus\" style={{ marginLeft: 10 }} type=\"danger\" icon={<DeleteOutlined />} >Hapus</Button>\n                    </Popconfirm>\n                </span>\n            ),\n        },\n    ];\n\n\n    return (\n        <Content\n            className=\"site-layout-background\"\n            style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 'auto',\n               // height:'auto'\n            }}\n        >\n            <Card\n                title=\"Atribut\"\n                //extra={<Button type=\"dashed\" onClick={() => browserHistory.push('/addpegawai')}>Tambah Pegawai </Button>}\n                extra={<Button type=\"dashed\" onClick={modelTrigger}>Tambah Atribut </Button>}\n                style={{ width: '100%', borderWidth: 0 }}\n                headStyle={{ color: 'white', backgroundColor: '#0984e3', fontWeight: 'bold', fontSize: 20 }}\n            />\n            <Row style={{ width: '100%' }}>\n                <Col xs={12} sm={12} md={12} lg={12} xl={8} style={{ padding: 10 }}>\n                    <Card\n                        title=\"Tipe Saluran\"\n                        //extra={<Button type=\"dashed\" onClick={() => browserHistory.push('/addpegawai')}>Tambah Pegawai </Button>}\n                        style={{ width: '100%', borderWidth: 0 }}\n                        headStyle={{ color: 'black', backgroundColor: '#dfe4ea', fontWeight: 'bold', fontSize: 14 }}\n                    />\n                     <Table columns={columns} dataSource={listTipeSaluran} />\n                </Col>\n                <Col xs={12} sm={12} md={12} lg={12} xl={8} style={{ padding: 10 }}>\n                    <Card\n                        title=\"Konstruksi\"\n                        //extra={<Button type=\"dashed\" onClick={() => browserHistory.push('/addpegawai')}>Tambah Pegawai </Button>}\n                        style={{ width: '100%', borderWidth: 0 }}\n                        headStyle={{ color: 'black', backgroundColor: '#dfe4ea', fontWeight: 'bold', fontSize: 14 }}\n                    />\n                     <Table columns={columns} dataSource={listKontruksi} />\n                </Col>\n                <Col xs={12} sm={12} md={12} lg={12} xl={8} style={{ padding: 10 }}>\n                    <Card\n                        title=\"Kondisi Konstruksi\"\n                        //extra={<Button type=\"dashed\" onClick={() => browserHistory.push('/addpegawai')}>Tambah Pegawai </Button>}\n                        style={{ width: '100%', borderWidth: 0 }}\n                        headStyle={{ color: 'black', backgroundColor: '#dfe4ea', fontWeight: 'bold', fontSize: 14 }}\n                    />\n                     <Table columns={columns} dataSource={listKondisi} />\n                </Col>\n            </Row>\n            <Row style={{ width: '100%' }}>\n                <Col xs={12} sm={12} md={12} lg={12} xl={8} style={{ padding: 10 }}>\n                    <Card\n                        title=\"Konsisi Saluran\"\n                        //extra={<Button type=\"dashed\" onClick={() => browserHistory.push('/addpegawai')}>Tambah Pegawai </Button>}\n                        style={{ width: '100%', borderWidth: 0 }}\n                        headStyle={{ color: 'black', backgroundColor: '#dfe4ea', fontWeight: 'bold', fontSize: 14 }}\n                    />\n                    <Table columns={columns} dataSource={listKondisiSaluran} />\n                </Col>\n                <Col xs={12} sm={12} md={12} lg={12} xl={8} style={{ padding: 10 }}>\n                    <Card\n                        title=\"Kecamatan\"\n                        //extra={<Button type=\"dashed\" onClick={() => browserHistory.push('/addpegawai')}>Tambah Pegawai </Button>}\n                        style={{ width: '100%', borderWidth: 0 }}\n                        headStyle={{ color: 'black', backgroundColor: '#dfe4ea', fontWeight: 'bold', fontSize: 14 }}\n                    />\n                     <Table columns={columns} dataSource={listKecamatan} />\n                </Col>\n            </Row>\n\n\n            <Modal\n                title=\"Tambah Atribut\"\n                centered\n                visible={modal}\n                onOk={createAttr}\n                onCancel={modelTrigger}\n                width={1000}\n            >\n                <InputBoxAbove style={{ backgroundColor: '#f7d794' }}>\n                    <Label>Data Pegawai</Label>\n                </InputBoxAbove>\n                <InputBoxCenter>\n                    <Label>Tingkat menurut peraturan perjalanan</Label>\n                    <Select\n                        showSearch\n                        placeholder=\"Tingkat menurut peraturan perjalanan\"\n                        optionFilterProp=\"children\"\n                        style={{ width: '100%', borderWidth: 0 }}\n                        onChange={onChangeKategori}\n                        value={kategori}\n                    >\n                        <Option value=\"Tipe Saluran\">Tipe Saluran</Option>\n                        <Option value=\"Konstruksi\">Konstruksi</Option>\n                        <Option value=\"Kondisi\">Kondisi Konstruksi</Option>\n                        <Option value=\"Kondisi Saluran\">Kondisi Saluran</Option>\n                        <Option value=\"Kecamatan\">Kecamatan</Option>\n                    </Select>\n                </InputBoxCenter>\n                <InputBoxBottom>\n                    <Label>Nama Atribut</Label>\n                    <Inputx placeholder=\"Nama Atribut\" value={nama_attr} onChange={e => setNamaAttr(e.target.value)} />\n                </InputBoxBottom>\n            </Modal>\n\n        </Content >\n    )\n}\n\nexport default Attr;","import React from 'react';\nimport { Router, Route, browserHistory, IndexRoute } from 'react-router';\nimport Master from './Master';\nimport Dashboard from './component/Dashboard';\nimport Login from './component/auth/Login';\nimport Administrator from './component/Administrator';\nimport Polyline from './component/Polyline';\nimport GisAttr from './component/Gisattr';\n\nfunction Routemain(){\n    return(\n        <Router history={browserHistory} >\n            <Route path={`${process.env.PUBLIC_URL}/drainase-admin/`} component={Login} />\n            <Route component={Master}>\n                <Route path={`${process.env.PUBLIC_URL}/drainase-admin/dashboard`} component={Dashboard} />\n                <Route path={`${process.env.PUBLIC_URL}/drainase-admin/administrator`} component={Administrator} />\n                <Route path={`${process.env.PUBLIC_URL}/drainase-admin/polyline`} component={Polyline} />\n                <Route path={`${process.env.PUBLIC_URL}/drainase-admin/gisattr`} component={GisAttr} />\n            </Route>\n        </Router>\n    );\n}\n\nexport default Routemain","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    counter : 0,\n    isLogin : false,\n    savedDatas : []\n}\n\nexport default function RootRecucer(state = initialState, action){\n\n    switch(action.type){\n        case 'TAMBAH' :\n            return {counter: 2}\n        case 'DECREMENT' :\n            return {counter: state.counter - 1}\n        case 'ISLOGIN':\n            return {isLogin: true}\n        case 'SAVEDATAS' :\n            return {savedDatas : JSON.parse(localStorage.getItem('isLogin'))}\n        case 'REMOVEDATAS':\n            return {savedDatas : []}\n        default:\n            return false;\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Route from './Route';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport RootReducer from './reducer/RootReducer';\n\nconst store = createStore(RootReducer)\n\nReactDOM.render(\n  <Provider store = {store}>\n    <React.StrictMode>\n      <Route />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}